(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{222:function(a,t,s){"use strict";s.r(t);var e=s(28),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("代码参考"),s("a",{attrs:{href:"./JSBridge.js"}},[a._v("云之家桥的实现")]),a._v("\n原理参考https://juejin.im/post/5abca877f265da238155b6bc#heading-6")]),a._v(" "),s("h2",{attrs:{id:"js调用native"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js调用native"}},[a._v("#")]),a._v(" js调用native")]),a._v(" "),s("p",[a._v("url根据bridge的名称、参数等拼接成url")]),a._v(" "),s("h3",{attrs:{id:"注入api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注入api"}},[a._v("#")]),a._v(" 注入API")]),a._v(" "),s("p",[a._v("native将方法API注入到js的window对象下，js调用API，就执行了此API内部的native逻辑，使得native可以拿到url")]),a._v(" "),s("h3",{attrs:{id:"拦截url-scheme"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拦截url-scheme"}},[a._v("#")]),a._v(" 拦截URL SCHEME")]),a._v(" "),s("p",[a._v("URL SCHEME是类似于url的链接，其中协议是native和js协定好的协议，名字自定义。\nh5通过隐藏iframe的方式，将iframe的src设置为url，此时h5就会自动去加载url的内容，类似于浏览器向服务端发起请求，此时向native发起URL SCHEME请求，之后\nnative拦截并获取参数等")]),a._v(" "),s("h2",{attrs:{id:"native调用js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#native调用js"}},[a._v("#")]),a._v(" native调用js")]),a._v(" "),s("p",[a._v("native调用js非常简单，因为h5相当于就是native的一个子组件，native直接调用其API即可。也就是js上全局注册一个接收响应的方法，native直接调用此方法，并将数据传入即可。\n形如：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("webView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"javascript:"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" javaScriptMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"native传回数据时，是如何找到对应的callback的呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#native传回数据时，是如何找到对应的callback的呢？"}},[a._v("#")]),a._v(" native传回数据时，是如何找到对应的callback的呢？")]),a._v(" "),s("p",[a._v("采用的是类似于JSONP的机制，当js调用的时候，就会将callback生成为一个唯一的id（用一个对象维护当前所有id及其对应的callback）,并将其传给native，native返回数据时只需要将此callbackID传回来，查找到对饮的callback执行即可。")])])}),[],!1,null,null,null);t.default=n.exports}}]);