(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{300:function(t,a,s){"use strict";s.r(a);var n=s(28),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("文章"),s("RouterLink",{attrs:{to:"/pages/frontEnd/js基础/执行上下文栈.html"}},[t._v("执行上下文栈")]),t._v("主要讲了代码执行过程中，执行上下文栈的变化，从文本开始，主要研究下执行上下文内部。\n与执行上下文相关的3个概念：")],1),t._v(" "),s("ul",[s("li",[t._v("变量对象(Variable object，VO)")]),t._v(" "),s("li",[t._v("作用域链(Scope chain)")]),t._v(" "),s("li",[t._v("this\n本文首先研究下变量对象。")])]),t._v(" "),s("h2",{attrs:{id:"变量对象vo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量对象vo"}},[t._v("#")]),t._v(" 变量对象VO")]),t._v(" "),s("p",[t._v("变量对象是与执行上下文相关的数据作用域，存储了在上下文中定义的数据。包括")]),t._v(" "),s("ul",[s("li",[t._v("变量 (var, 变量声明);")]),t._v(" "),s("li",[t._v("函数声明 (FunctionDeclaration, 缩写为FD);")]),t._v(" "),s("li",[t._v("函数的形参(仅在函数执行上下文中存在)")])]),t._v(" "),s("p",[t._v("全局上下文和函数上下文中的变量对象有些不同，因此以下分开讨论。")]),t._v(" "),s("h2",{attrs:{id:"浏览器控制台查看vo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器控制台查看vo"}},[t._v("#")]),t._v(" 浏览器控制台查看VO")]),t._v(" "),s("p",[t._v("在讨论前，我们先看下在浏览器控制台如何查看VO，以帮助我们更好的理解后续内容。")]),t._v(" "),s("p",[t._v("之前在文章"),s("RouterLink",{attrs:{to:"/pages/frontEnd/js基础/执行上下文栈.html"}},[t._v("执行上下文栈")]),t._v("中提到通过Call Stack查看执行上下文栈，变量对象也可以在控制台中看到。\n"),s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwgy1gazecpumkoj30ty0cs76t.jpg",alt:"变量对象"}})],1),t._v(" "),s("blockquote",[s("p",[t._v("图中红框的部分确切来说是用来看作用域链的，但这块还没讲到，我们可以暂且这样做：需要观察哪个执行上下文的变量对象，就debugger到对应的可执行代码块中，然后观察Local内变量的状态。")])]),t._v(" "),s("h2",{attrs:{id:"全局上下文中的变量对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局上下文中的变量对象"}},[t._v("#")]),t._v(" 全局上下文中的变量对象")]),t._v(" "),s("h3",{attrs:{id:"全局对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局对象"}},[t._v("#")]),t._v(" 全局对象")]),t._v(" "),s("p",[t._v("全局对象Global是JavaScript最特别的一个对象，是在进入任何执行上下文之前就已经创建了的对象。")]),t._v(" "),s("p",[t._v("全局对象在初始阶段就将Math、String、Date、parseInt等属性作为自身属性初始化，同样在全局作用域创建的所有变量或方法，也就是我们通常称为的全局对象或全局方法，也都是全局对象的属性。")]),t._v(" "),s("blockquote",[s("p",[t._v("区别全局对象和window")]),t._v(" "),s("p",[t._v("window只是Global在浏览器环境下的一种体现，也就是在浏览器中"),s("code",[t._v("Global === window")]),t._v("，但不能混淆这2个概念。比如在Node.js中，Global仍然存在，但不等于window了。")])]),t._v(" "),s("h3",{attrs:{id:"全局上下文中的vo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局上下文中的vo"}},[t._v("#")]),t._v(" 全局上下文中的VO")]),t._v(" "),s("p",[t._v("通过以上对全局上下文的解释，我们可以知道，全局上下文中的变量对象就是Global。即")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("globalContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" global"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("也就是在全局上下文中的变量，都可以通过Global的属性来访问。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("运行上述代码，打开控制台。在第一个debugger处，可以看到右侧是Global，展开会发现里面包含了很多Global自带的属性（Math、String等），同时也包含了我们声明的x变量和bar函数。")]),t._v(" "),s("p",[t._v("因此，说了这么多，就是一句话：全局上下文中的VO就是全局对象！")]),t._v(" "),s("h2",{attrs:{id:"函数上下文的vo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数上下文的vo"}},[t._v("#")]),t._v(" 函数上下文的VO")]),t._v(" "),s("p",[t._v("在函数上下文中，将活动对象（activation object, AO）作为变量对象。")]),t._v(" "),s("p",[t._v("活动对象是在进入函数上下文时刻被创建的，它通过函数的arguments属性初始化。")]),t._v(" "),s("p",[t._v("注释掉bar中的其他变量声明\n"),s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwgy1gazjny1oerj312s0asdil.jpg",alt:""}}),t._v("\n可以看到，进入bar时，arguments就已经初始化了。")]),t._v(" "),s("h2",{attrs:{id:"整体流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体流程"}},[t._v("#")]),t._v(" 整体流程")]),t._v(" "),s("p",[t._v("除了形参和arguments的差异，全局上下文和函数上下文的变量对象的变化过程都是一样的，因此下面统一讨论。")]),t._v(" "),s("h3",{attrs:{id:"进入执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入执行上下文"}},[t._v("#")]),t._v(" 进入执行上下文")]),t._v(" "),s("p",[t._v("在进入执行上下文时，变量对象VO已经包含了如下属性")]),t._v(" "),s("ul",[s("li",[t._v("函数形参（仅存在于函数执行上下文）")])]),t._v(" "),s("p",[t._v("由名称和对应值组成的一个变量对象的属性被创建；没有传递对应参数的话，那么由名称和undefined值组成的一种变量对象的属性也将被创建。")]),t._v(" "),s("ul",[s("li",[t._v("函数声明")])]),t._v(" "),s("p",[t._v("由名称和对应值（函数对象(function-object)）组成一个变量对象的属性被创建；如果变量对象已经存在相同名称的属性，则完全替换这个属性")]),t._v(" "),s("ul",[s("li",[t._v("变量声明")])]),t._v(" "),s("p",[t._v("由名称和对应值（undefined）组成一个变量对象的属性被创建；"),s("strong",[t._v("如果变量名称跟已经声明的形式参数或函数相同，则变量声明不会干扰已经存在的这类属性。")])]),t._v(" "),s("p",[t._v("还是上面那段代码，在第二个debugger处查看函数的变量对象")]),t._v(" "),s("blockquote",[s("p",[t._v("说明：除了形参和arguments，其他变量在全局环境中观察也是一样的，只是Global中太多自身属性，要找到我们定义的变量比较麻烦，因此就在函数中观察，但结果可扩展到全局上下文中。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwgy1gazjtjs4xzj311o0d0diq.jpg",alt:"函数变量对象"}}),t._v("\n可以看到，包含了arguments、函数foo、形参b、变量a")]),t._v(" "),s("p",[t._v("这里要特别说明2个问题：")]),t._v(" "),s("blockquote",[s("p",[t._v("1.函数声明会覆盖同名的变量声明，后面的函数声明会覆盖同名的前面的函数声明")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("打开控制台，可以看到"),s("strong",[t._v("进入执行上下文时")]),t._v("，即使"),s("code",[t._v("var foo = 1")]),t._v("在函数声明后面，最终foo也是函数而不是变量，且console会打印出2（后面的函数声明覆盖了前面的）。\n"),s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwgy1gazk545beij30vm0a0di1.jpg",alt:"结果"}})]),t._v(" "),s("blockquote",[s("p",[t._v("2.变量只能通过使用var关键字才能声明")])]),t._v(" "),s("p",[t._v("变量声明要通过var， 即"),s("code",[t._v("var b = 10")]),t._v("是声明了变量foo，但"),s("code",[t._v("b = 10")]),t._v("没有。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 报错，"b" 没有声明')]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("console.log(b)")]),t._v("会报错，因为在进入b还没有声明，查看右侧Global中也会发现，在进入执行上下文时，只有a，没有b\n"),s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwgy1gazkiirfgbj30vm05s40c.jpg",alt:""}}),t._v(" "),s("code",[t._v("var b = 10")]),t._v("可以分解为2个步骤：变量声明和变量赋值，但"),s("code",[t._v("b = 10")]),t._v("只是一个单纯的赋值操作（这里是Global.b = 10）。而变量声明是在进入执行上下文发生，而赋值操作是在执行赋值代码时发生，因此在赋值操作前是访问不到b的。")]),t._v(" "),s("h3",{attrs:{id:"代码执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码执行"}},[t._v("#")]),t._v(" 代码执行")]),t._v(" "),s("p",[t._v("在代码执行阶段，就会按顺序执行代码，根据代码修改变量的值。")]),t._v(" "),s("p",[t._v("沿用上面的一个例子，修改下")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("打开控制台，会发现，在debugger处（进入执行上下文），foo是函数，且没有报错；但继续顺序执行代码会报错，因为执行到"),s("code",[t._v("var foo = 1")]),t._v("，此时foo已经被赋值为1，不为函数，故执行"),s("code",[t._v("foo()")]),t._v("时会报错。")]),t._v(" "),s("p",[t._v("通过以上例子，能比较好的分清楚进入执行上下文阶段和代码执行阶段的区别。")])])}),[],!1,null,null,null);a.default=r.exports}}]);